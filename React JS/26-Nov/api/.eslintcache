[{"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/index.js":"1","/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/App.js":"2","/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/reportWebVitals.js":"3","/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/registerServiceWorker.js":"4","/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/components/FetchRandomUser.js":"5"},{"size":253,"mtime":1606606916111,"results":"6","hashOfConfig":"7"},{"size":317,"mtime":1606606864119,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1606606726143,"results":"9","hashOfConfig":"7"},{"size":4991,"mtime":1606606975163,"results":"10","hashOfConfig":"7"},{"size":906,"mtime":1606607455531,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vf7usl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/index.js",[],["24","25"],"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/App.js",[],"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/reportWebVitals.js",[],"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/registerServiceWorker.js",[],"/home/user/Desktop/OCA-Exercises/React JS/26-Nov/api/src/components/FetchRandomUser.js",["26"],"import React from \"react\";\n\nexport default class FetchRandomUser extends React.Component {\n    state = {\n        loading: true,\n        person: null\n    };\n\n    async componentDidMount() {\n        const url = \"https://api.randomuser.me/\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({ person: data.results[0], loading: false });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div>loading...</div>;\n        }\n\n        if (!this.state.person) {\n            return <div>didn't get a person</div>;\n        }\n\n        return (\n            <div>\n                <div>{this.state.person.name.title}</div>\n                <div>{this.state.person.name.first}</div>\n                <div>{this.state.person.name.last}</div>\n                <img src={this.state.person.picture.large} />\n            </div>\n        );\n    }\n}",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":30,"column":17,"nodeType":"33","endLine":30,"endColumn":62},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]